# global setting
setw -g xterm-keys on
# maybe blow is no need
set-option -g default-terminal "xterm"
set -g terminal-overrides "xterm*:kLFT5=\eOD:kRIT5=\eOC:kUP5=\eOA:kDN5=\eOB:smkx@:rmkx@"

# using set -gq instead of set -g will silence the unknown option error,
# while stilll setting it on old versions of tmux
set -gq status-utf8 on 				 # enbale utf-8
set-option -g default-terminal "screen-256color" # use 256 colors
set-option -g history-limit 100000		 # scrollback buffer in lines
set-option -g display-time 5000			 # ms
set-option -g repeat-time 1000			 # ms
set-window-option -g display-panes-time 1500
set-option -g repeat-time 0			 # allow the arrow key to used inimmediately after changing windows

set-option -g renumber-windows on 		 # window 0,1,2, remove 1, renumber to 1,2,3

# to merge history with bash_history
set -g history-file ~/.tmux_history 

# set window notifications
setw -g monitor-activity on
set -g visual-activity on

# use ctrl-a, since it's on the home row and easier to hit than ctrl-b
set-option -g prefix C-a
unbind-key C-b 

# make 'ctrl-a ctrl-a' to move to beginning of the command line of terminal
bind-key C-a send-prefix


# bind a reload key: prefix + R
bind R source-file ~/.tmux.conf

# ------------------- session begin --------------------
bind -r ( switch-client -p
bind -r ) switch-client -n
# ------------------- session end ----------------------


# ------------------- window begin ---------------------
set-option -g base-index 1                        # window index start at 1, not 0

set-window-option -g pane-base-index 1            # panes index start at 1, setw means set-window-option
set-window-option -g other-pane-height 25
set-window-option -g other-pane-width 80

# [prefix-c] create a new window
bind-key c new-window
# [prefix-number] switch to the n window
# [prefix-p] swith window

# [prefix-t/T] swith window
bind-key t next-window
bind-key T previous-window
# bind-key space next-window
# bind-key bspace previous-window

# [prefix-Ctrl-o] change window in order
bind-key C-o rotate-window
# ------------------- window end -----------------------


# ------------------- pane begin -----------------------
# use vim-like keys for splits and windows
# v / s splite, v-splite
# default key below
unbind '"' 
unbind %
# split windows like vim.  - Note: vim's definition of a horizontal/vertical split is reversed from tmux's
# [prefix-v] / [prefix-s]
bind-key v split-window -h
bind-key s split-window -v

# key bindings for horizontal and vertical panes
# key [\|] and [_-] no nedd shift
# bind-key \ split-window -h
# bind-key - split-window -v

# [prefix-hjkl] pane move
unbind-key h
bind-key h select-pane -L
unbind-key j
bind-key j select-pane -D
unbind-key k
bind-key k select-pane -U
unbind-key l
bind-key l select-pane -R

    # alt + arrow key
    #bind -n M-Left select-pane -L
    #bind -n M-Right select-pane -R
    #bind -n M-Up select-pane -U
    #bind -n M-Down select-pane -D

# smart pane switching with awareness of vim splits
# [Ctrl-hjkl] pane move
#bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-h) || tmux select-pane -L"
#bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-j) || tmux select-pane -D"
#bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-k) || tmux select-pane -U"
#bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-l) || tmux select-pane -R"
# [Ctrl-l] 左右两个切  [Ctrl-\] 最近的两个切换
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys 'C-\\') || tmux select-pane -l"
bind C-l send-keys 'C-l'

# [prefix-q] 
bind-key q display-panes
# bind-key a last-pane # which one is the best? 

# pane size modify
# resize panes using PREFIX H, J, K, L
bind H resize-pane -L 5
bind J resize-pane -D 5
bind K resize-pane -U 5
bind L resize-pane -R 5

# layout
# [prefix-space]
# bind-key + select-layout main-horizontal
# bind-key = select-layout main-vertical
# -------------------------------- pane end -------------------------


# -------------------------------- move/copy/paste begin ------------
# use vi mode
# vi is good  let Tmux as vi mode, operate is closed to Vim
setw -g mode-keys vi

# [ begin copy mode, space begin select, arrow key or hjkl move, enter copy, ] paste 
bind-key [ copy-mode
bind-key ] paste-buffer

# Copy and paste like in vim
# p paste
unbind p
bind p paste-buffer


# the following vi-copy bindings match my vim settings
#   see https://github.com/gpakosz/.vim.git
# Setup 'v' to begin selection as in Vim
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle

bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
bind-key -T copy-mode-vi Escape send-keys -X cancel
bind-key -T copy-mode-vi H send-keys -X start-of-line
bind-key -T copy-mode-vi L send-keys -X end-of-line

# Update default binding of `Enter` to also use copy-pipe
unbind-key -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
# bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# -------------------------------- move/copy/paste end -----------------------

# -------------------------------- mouse begin --------------------------------
# mouse behavior
# select window\pane, resize pane, copy and paste etc. version > 2.1
# set-option -g mouse on

# below is old version
# Using set -gq instead of set -g will silence the unknown option error, while still setting it on old versions of tmux
#setw -gq mode-mouse on
#set -gq mouse-select-pane on
#set -gq mouse-resize-pane on
#set -gq mouse-select-window on
# -------------------------------- mouse end --------------------------------

# -------------------------------- status line begin  --------------------------------

# window index 
#set -g renumber-windows on

# auto reflush time interval
set -g status-interval 1
# left duiqi
set -g status-justify left
# left width
set -g status-left-length 20
# right width
set -g status-right-length 50

# status bar background color
set -g status-bg '#333333'
# status bar fg color
set -g status-fg '#ffffff'
# left show session name
set -g status-left '#[bg=#00bb00] [#S] #[default] '
# right show datetime
#set -g status-right '#[fg=white,bg=#55bb00] [#h] #[fg=white,bg=#009c00] %Y-%m-%d #[fg=white,bg=#007700] %H:%M:%S '
set -g status-right '#[fg=white,bg=#444444] [#h] #[fg=white,bg=#666666] %Y-%m-%d #[fg=white,bg=#888888] %H:%M:%S '

# current active window show format
setw -g window-status-current-format '#[bg=#ff0000, fg=#ffffff, bold]*[#I] #W*'
# nonactive window format
setw -g window-status-format '#[bg=#0000ff, fg=#ffffff] [#I] #W '


# --- below is ajioy no need ---
# 颜色
# set-option -g status-bg black
# set-option -g status-fg white

#set -g status-bg '#4e4e4e'
#set -g status-fg '#bbbbbb'
#set -g status-left-fg '#bbbbbb'
#set -g status-left-bg '#4e4e4e'
#set -g status-right-fg '#bbbbbb'
#set -g status-right-bg '#4e4e4e'

#set -g status-left-length 90
#set -g status-right-length 60

# 对齐方式
#set-option -g status-justify centre

# 左下角
# set-option -g status-left '#[bg=black,fg=green][#[fg=cyan]#S#[fg=green]]'
#set-option -g status-left "S-#S:W-#I:P-#P"

# 窗口列表
#setw -g automatic-rename on
# set-window-option -g window-status-current-fg magenta
#set-window-option -g window-status-format '#[dim]#I:#[dim]#W#[fg=grey,dim]'
#set-window-option -g window-status-current-format '[#[fg=white,bold]#I#[fg=white,bold]:#[fg=white,bold]#W#[fg=dim]]'


# right bottom show
#set -g status-right '#[fg=green][#[fg=white]%m-%d %H:%M#[fg=green]]'


# -------------------------------- status line end --------------------------------


# -------------------------------- color begin --------------------------------
# pane border colors
#set-option -g pane-active-border-fg '#55ff55'
#set-option -g pane-border-fg '#555555'
# set -g pane-border-fg colour245
# set -g pane-active-border-fg colour39

# -------------------------------- color end --------------------------------

# --- ajioy no need end ---





# -------------------------------- plugin begin --------------------------------
# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

# tmux-resurrect
set -g @resurrect-save-bash-history 'on'
set -g @resurrect-capture-pane-contents 'on'
set -g @resurrect-strategy-vim 'session'
# set -g @resurrect-save 'S'
# set -g @resurrect-restore 'R'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)

run '~/.tmux/plugins/tpm/tpm' # must be the last line prefix+shift+i to install
# -------------------------------- plugin end  ---------------------------------
 
